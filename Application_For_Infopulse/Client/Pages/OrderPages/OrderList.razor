@page "/"
@page "/order"
@inject OrderService _orderService
@inject NavigationManager navManager




<div class="row mt-4 mb-3">
    <div class="col">
        <ActionTitle ActionString='@("Orders")'/>
    </div>
    <div class="col text-right">
        <button class="btn btn-secondary" @onclick="GoToNewOrderPage">New Order</button>
    </div>
</div>
<div class="secondborder">
    <table class="pb-5 table-bordered" width="100%">
        <thead>
            <tr>               
                <th class="text-center">Order Number</th>
                <th class="text-center">Customer Name</th>
                <th class="text-center">Customer Address</th>
                <th class="text-center">Total Cost</th>
                <th class="text-center">Status</th>
            </tr>
        </thead>
        <tbody>
            @if (orders == null)
            {
                <tr>
                    <td>Orders are loading...</td>
                </tr>
            }
            else if (orders.Count == 0)
            {
                <tr>
                    <td>Table is empty</td>
                </tr>
            }
            else
            {
                @foreach (var itemOrder in orders)
                {
                    <tr @onmouseover="@(() => SelectedRow(itemOrder))"
                        @onmouseout="@(() => UnselectedRow ())"
                        style="cursor:pointer; @( selectedOrder == itemOrder ?"background-color:aquamarine" : "")"
                        @onclick= "() => ChooseViewOrder(itemOrder)">
                        <td class="text-center"><a href="/order/editorder/@itemOrder.OrderId">@itemOrder.OrderId</a></td>
                        <td class="text-center"> @(@itemOrder.Customer==null ? "Customer": itemOrder.Customer.Name )</td>
                        <td class="text-center">@(@itemOrder.Customer == null ? "Customer Address" : itemOrder.Customer.Address )</td>
                        <td class="text-center">@itemOrder.TotalCost</td>
                        <td class="text-center">@itemOrder.Status</td>
                    </tr>
        }
            }


        </tbody>
    </table>
</div>

<p>@message</p>

    @code {
        private List<Order> orders;
        Order selectedOrder;

        private string message;//temp

        protected override async Task OnInitializedAsync()
        {

            orders = await _orderService.GetAllAsync();
            //selectedOrder = orders[0];
        }

        private void SelectedRow(Order order)
        {
            selectedOrder = order;
        }

        private void UnselectedRow()
        {
            selectedOrder = null;
        }

        private void ChooseViewOrder(Order order)
        {
            //message = "ChooseViewOrder " + order.OrderId.ToString();
            navManager.NavigateTo($"/order/view/{order.OrderId}");
        }

        void GoToNewOrderPage()
        {
            navManager.NavigateTo($"/order/neworder/");
        }
    }
